name: build deploy prod

env:
  TAG: $(echo ${GITHUB_SHA::8}-$(date +'%Y-%m-%d'))
  REPO_NAME: kurdzik
  IMAGE_NAME: ml-inference
  APP_NAME: ml-inference-api
  APP_PORT: 40071

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN  }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build and push
        run: |
          docker build -t ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME}}:${{ env.TAG }} -f Dockerfile .
          docker push ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME}}:${{ env.TAG }}

      - name: build and push latest
        run: |
          docker build -t ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME}}:latest -f Dockerfile .
          docker push ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME}}:latest
          
  remove-running-app:
    needs: [ build ]
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: clear env
        run: |
          docker rm -f ${{ env.APP_NAME}}
          docker image rm ${{ secrets.DOCKERHUB_LOGIN  }}/${{ env.IMAGE_NAME}}:latest
          docker system prune -af
          
  redeploy:
    runs-on: self-hosted
    if: always()
    needs: [remove-running-app]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: build .env file
        run: >-
          echo APP_NAME=${{ env.APP_NAME }} >> .env &&
          echo APP_VERSION=${{ env.TAG }} >> .env &&
          echo VAULT_TOKEN=${{ secrets.VAULT_TOKEN }} &&
          echo VAULT_URL=${{ secrets.VAULT_URL }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull image
        run: >-
          docker pull ${{ secrets.DOCKERHUB_LOGIN }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy
        run: >-
          docker run -d --publish=${{ env.APP_PORT }}:4444 --name ${{ env.APP_NAME }} --env-file .env --restart=always ${{ secrets.DOCKERHUB_LOGIN }}/${{ env.IMAGE_NAME }}:latest